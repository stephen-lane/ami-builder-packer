{
  "variables": {
    "vpc": "{{env `BUILD_VPC_ID`}}",
    "subnet": "{{env `BUILD_SUBNET_ID`}}",
    "aws_region": "{{env `AWS_REGION`}}",
    "ami_name": "prod-cis-latest-ubuntu-16.04-{{isotime \"02-Jan-06 03_04_05\"}}"
  },
  "builders": [{
    "name": "AWS AMI Builder - CIS",
    "type": "amazon-ebs",
    "region": "{{user `aws_region`}}",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t1.micro",
    "ssh_username": "ubuntu",
    "ami_name": "{{user `ami_name` | clean_ami_name}}",
    "tags": {
      "Name": "{{user `ami_name`}}"
    },
    "run_tags": {
      "Name": "{{user `ami_name`}}"
    },
    "run_volume_tags": {
      "Name": "{{user `ami_name`}}"
    },
    "snapshot_tags": {
      "Name": "{{user `ami_name`}}"
    },
    "ami_description": "Amazon Linux CIS with Cloudwatch Logs agent",
    "associate_public_ip_address": "true",
    "vpc_id": "{{user `vpc`}}",
    "subnet_id": "{{user `subnet`}}"
  }],
  "provisioners": [{
      "type": "shell",
      "inline": [
        "sudo su",
        "sudo apt-get -y install software-properties-common",
        "sudo apt-add-repository ppa:ansible/ansible",
        "sudo apt-get update",
        "sudo apt-get -y install ansible",
        "sudo apt-get install python",
        "sudo easy_install pip",
        "sudo pip install pexpect"
      ]
    },
    {
      "type": "ansible-local",
      "extra_arguments": [
        "--extra-vars",
        "ansible_python_interpreter=/usr/bin/python3"
      ],
      "playbook_file": "ansible/playbook.yaml",
      "playbook_dir": "ansible",
      "role_paths": [	
        "ansible/roles/common"	
      ],	
      "galaxy_file": "ansible/requirements.yaml",
      "inventory_groups": "frontend"
    },
    {
      "type": "shell",
      "inline": [
        "rm .ssh/authorized_keys ; sudo rm /root/.ssh/authorized_keys"
      ]
    }
  ]
}
